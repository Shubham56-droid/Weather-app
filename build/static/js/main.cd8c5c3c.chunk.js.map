{"version":3,"sources":["app-component/Weather.js","app-component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","className","city","country","class","weatherIcon","temp_celsius","min","temp_min","max","temp_max","description","pressure","humidity","windspeed","Form","error","role","error2","onSubmit","loadWeather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","console","log","setState","sys","celsius","calCelsius","main","temp","weather","wind","speed","get_WeatherIcon","id","state","undefined","icon","preassure","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","Math","floor","icons","rangeid","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd8c5c3c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n//  way  to use inline  css  into react  file\r\n// import { div, makeStyles } from \"@material-ui/core\";\r\n\r\n// const useStyles = makeStyles({\r\n//     component:{\r\n//         height:`100vh`,\r\n//         display:`flex`,\r\n//         alignItems:`center`,\r\n\r\n//     },\r\n//     leftcontainer:{\r\n//         backgroundImage:`url(${wall})`,\r\n//         height:`100%`,\r\n//         width:`500px`,\r\n\r\n//     }\r\n\r\n// })\r\n//  function  \r\n\r\nfunction minmaxTemp(min,max)\r\n{\r\n  return(\r\n    <h3>\r\n      {min?( <span className=\"py-4 minmax\">{min}&deg; min</span>):null}\r\n      {max?(<span className=\"py-4 minmax\">{max}&deg; max</span>):null}\r\n    </h3>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport const Weather = (props) => {\r\n  // const classes = useStyles();\r\n  // in  order  to use  css  we  have  to put  className={classes.component} and same  for  other.\r\n\r\n  return (\r\n    <div className=\"component\">\r\n      <div className=\"blur-back\">\r\n        <div className=\"container\">\r\n          <div className=\"rightcontainer\">\r\n\r\n            <div className=\"box\">\r\n            <h1 className=\"head-name py-2\">\r\n\r\n              {props.city}  {props.country}\r\n\r\n            </h1>\r\n            <h5 className=\"py-4 icons-weath\">\r\n              <i class={`wi ${props.weatherIcon} display-1`}></i>\r\n            </h5>\r\n           {props.temp_celsius?( <h1 className=\"py-2 temp-main\">{props.temp_celsius}&deg; Celsius</h1>):null}\r\n             {/* show  min  max  temprature */}\r\n             \r\n             {minmaxTemp(props.temp_min,props.temp_max)}\r\n            \r\n             {props.description?(<h4 className=\"py-2 desc\">{props.description}</h4>):null}\r\n            \r\n            <div className=\"py-3 box-2\">\r\n            {props.pressure?(<h4>Pressure: {props.pressure} hpa</h4>):null}\r\n            {props.humidity?(<h4>Humidity: {props.humidity}%</h4>):null}\r\n            {props.windspeed?(<h4>Wind-speed: {props.windspeed} kmph</h4>):null}\r\n              \r\n            </div>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react'\r\nimport \"./Form.css\";\r\n\r\nfunction error()\r\n{\r\n    return(\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Please Enter City And Country\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction error2()\r\n{\r\n    return(\r\n        <div className=\"alert alert-danger mx-5\" role=\"alert\">\r\n            Both City And Country Cannot Be Same\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Form = (props) => {\r\n    return (\r\n        <div>\r\n            <div>{props.error? error(): null}</div>\r\n            <div>{props.error2? error2(): null}</div>\r\n            <h1 className=\"namehead\">Weather App</h1>\r\n            <form onSubmit={props.loadWeather}>\r\n            <div className=\"col py-3\">\r\n                <div className=\"input-block\">\r\n                    <input type=\"text\" className=\"form-control\" name=\"city\" autoComplete=\"off\" placeholder=\"City\"/>\r\n                </div>\r\n                <div className=\"input-block\">\r\n                <input type=\"text\" className=\"form-control\" name=\"country\" autoComplete=\"off\" placeholder=\"Country\"/>\r\n                </div>\r\n                <div className=\"col-md-3 py-3 output-block\">\r\n                    <button className=\"btn btn-warning\">Get Weather</button>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\nimport \"./App.css\";\nimport \"weather-icons-master/css/weather-icons.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Weather } from \"./app-component/Weather\";\nimport { Form } from \"./app-component/Form\";\n\n\nconst API_key = \"19281a26448be18411057a10467dd830\";\n\nclass App extends React.Component\n{\n  \n  constructor()\n  {\n    super();\n    this.state = {\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description:\"\",\n      preassure: undefined,\n      humidity: undefined,\n      windspeed: undefined,\n      error: false,\n      error2:false\n    };\n   \n\n    this.weatherIcon = {\n      Thunderstorm:\"wi-thunderstorm\",\n      Drizzle:\"wi-sleet\",\n      Rain:\"wi-storm-showers\",\n      Snow:\"wi-snow\",\n      Atmosphere:\"wi-fog\",\n      Clear:\"wi-day-sunny\",\n      Clouds:\"wi-day-fog\"\n\n    }\n\n  };\n\n\n  calCelsius(temp)\n  {\n    let cell = Math.floor(temp-273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons,rangeid){\n      // eslint-disable-next-line default-case\n      switch(true)\n      {\n        case rangeid>=200 && rangeid<= 232:\n          this.setState({icon:this.weatherIcon.Thunderstorm});\n          break;\n        case rangeid>=300 && rangeid<= 321:\n          this.setState({icon:this.weatherIcon.Drizzle});\n          break;\n        case rangeid>=500 && rangeid<=531:\n          this.setState({icon:this.weatherIcon.Rain});\n          break;    \n        case rangeid>=600 && rangeid<=622:\n          this.setState({icon:this.weatherIcon.Snow});\n          break;\n        case rangeid>=701 && rangeid<=781:\n          this.setState({icon:this.weatherIcon.Atmosphere});\n          break;\n\n\n        case rangeid===800:\n          this.setState({icon:this.weatherIcon.Clear});\n          break;\n\n        case rangeid>=801 && rangeid<=804:\n          this.setState({icon:this.weatherIcon.Clouds});\n          break;\n\n        default:\n          this.setState({icon:this.weatherIcon.Clouds});\n      }\n  }\n\n  getWeather = async(e)=>{\n\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n   if(city && country)\n   {\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`);\n    const response  =  await api_call.json();\n    console.log(response);\n    \n    \n    this.setState({\n      city:response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n      pressure: response.main.pressure,\n      humidity: response.main.humidity,\n      windspeed: response.wind.speed\n\n    });\n\n    this.get_WeatherIcon(this.weatherIcon, response.weather[0].id)\n   }\n   else if(city===country)\n   {\n     this.setState({error2:true})\n   }\n   else\n   {\n     this.setState({error:true})\n   }\n  };\n  render()\n  {\n    return(\n      <>\n      <div className=\"leftcontainer\">\n      <Form loadWeather={this.getWeather} error={this.state.error}  error2={this.state.error2}/>\n      </div>\n      <div className=\"App\">\n      <Weather \n      city={this.state.city}\n      country={this.state.country}\n      temp_celsius={this.state.celsius}\n      temp_max = {this.state.temp_max}\n      temp_min = {this.state.temp_min}\n      description={this.state.description}\n      weatherIcon={this.state.icon}\n      pressure={this.state.pressure}\n      humidity={this.state.humidity}\n      windspeed={this.state.windspeed}\n      />\n      </div>\n      </>\n    );\n  };\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}